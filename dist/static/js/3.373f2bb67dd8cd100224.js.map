{"version":3,"sources":["webpack:///src/views/basic_data/index.vue","webpack:///./src/views/basic_data/index.vue?3210","webpack:///./src/views/basic_data/index.vue"],"names":["id","nodeData","basic_data","data","this","getSchoolData","selectedOptions2","defaultProps","children","label","props","value","multiple","checkStrictly","dialogFormVisible","newChild","targetId","targetDescription","targetShowType","targetChildren","targetRelevance","targetStatus","targetOrigin","formLabelWidth","labelPosition","schoolExisted","checked","selfCreat","editFlag","intervalId","currentChecked","components","ElSelectDropdown","select_dropdown","sideBarRouter","sideBar","headBarRouter","head","methods","Iteration","i","length","splice","pop","DFSNode","childrenId","nodes","node","push","_this","console","log","axios_default","a","post","lib_default","stringify","schoolId","then","response","target","exist","DFStoArray","cnt","chosenList","$refs","tree","getCheckedNodes","dataArray","showType","j","undefined","editSchoolData","edit","alert","d","updateTarget","addTarget","method","url","contentType","status","message","catch","result","createSchoolData","combined","concat","schoolData","append","testEmpty","$set","converterRelevanceID","getData","remove","editConfirm","recover","arguments","getCheckedKeys","setCheckedNodes","packageOne","setCheckedKeys","packageTwo","handleCheckChange","resetChecked","handleChange","_this2","relevanceID","forEach","relevance","$alert","renderContent","h","_ref","_this3","store","class","attrs","size","type","on","click","views_basic_data","render","_vm","_h","$createElement","_c","_self","staticStyle","position","top","bottom","left","width","direction","height","background","_v","staticClass","text-align","ref","default-checked-keys","show-checkbox","node-key","accordion","expand-on-click-node","highlight-current","render-content","change","model","callback","$$v","expression","$event","preventDefault","margin-left","label-width","options","placeholder","_e","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"uLAwFAA,kBAAA,GACAC,KACAC,GACAC,KADA,WAGA,OADAC,KAAAC,iBAEAC,oBAEAC,cACAC,SAAA,iBACAC,MAAA,qBAEAC,OACAC,MAAA,WACAF,MAAA,oBACAD,SAAA,iBACAI,UAAA,EACAC,eAAA,GAEAC,mBAAA,EACAC,UACAC,UAAA,EACAC,kBAAA,GACAC,eAAA,GACAC,kBACAC,mBACAC,cAAA,EACAC,cAAA,GAEAC,eAAA,QACAC,cAAA,OACArB,QAGAsB,cAAA,KAGAC,WACAC,aACAC,UAAA,EACAC,WAAA,EACAC,oBAIAC,YAAAC,iBAAAC,EAAA,EAAAC,cAAAC,EAAA,EAAAC,cAAAC,EAAA,GACAC,SAMAC,UANA,SAMA/B,GACA,QAAAgC,EAAA,EAAAA,EAAAvC,EAAAwC,SAAAD,EAAA,CACA,GAAAvC,EAAAuC,GAAAxB,WAAAR,EAEA,OADAP,EAAAyC,OAAAF,EAAA,GAAAG,MAIA,aAGAC,QAhBA,SAgBAC,GAEA,IADA,IAAAC,KACAN,EAAA,EAAAA,EAAAK,EAAAJ,SAAAD,EAAA,CAEA,IAAAO,EAAA3C,KAAAmC,UAAAM,EAAAL,IAEA,MAAAO,IACA,IAAAA,EAAA1B,cACAjB,KAAAsB,QAAAsB,KAAAD,EAAA/B,UAGA+B,EAAA5B,eAAAsB,OAAA,EACAK,EAAAE,MACAhC,SAAA+B,EAAA/B,SACAC,kBAAA8B,EAAA9B,kBACAG,gBAAA2B,EAAA3B,gBACAE,aAAAyB,EAAAzB,aACAD,aAAA0B,EAAA1B,aACAF,eAAAf,KAAAwC,QAAAG,EAAA5B,kBAIA2B,EAAAE,MACAhC,SAAA+B,EAAA/B,SACAC,kBAAA8B,EAAA9B,kBACAG,gBAAA2B,EAAA3B,gBACAE,aAAAyB,EAAAzB,aACAD,aAAA0B,EAAA1B,gBAGA,OAAAyB,GAoBAzC,cAlEA,WAkEA,IAAA4C,EAAA7C,KACA8C,QAAAC,MACA,IAAAL,KAGMM,EAAAC,EAANC,KAFA,gEAEAC,EAAAF,EAAAG,WAAAC,SAAA,KAQAC,KAAA,SAAAC,GAcA,IAZA1D,EAAA0D,EAAAxD,UAAAyD,OAEAX,EAAAxB,cAAAkC,EAAAxD,UAAA0D,MAGA7D,EAAAC,IAAAwC,OAAA,GAAAzB,SAAA,EAOAf,EAAAwC,OAAA,IACA,IAAAI,GAAA5C,EAAA,GAAAe,UAEA8B,EAAAE,KAAAC,EAAAL,QAAAC,GAAAF,OAGAM,EAAA9C,KAAA2C,KAOAgB,WA1GA,WA2GA,IAAAC,EAAA,EACAC,EAAA5D,KAAA6D,MAAAC,KAAAC,kBACAjB,QAAAC,IAAAa,GAEA,IADA,IAAAI,KACA5B,EAAA,EAAAA,EAAAwB,EAAAvB,SAAAD,EAAA,CACA,IAAArC,EAAA6D,EAAAxB,GACAzB,GACAC,SAAAb,EAAAa,SACAC,kBAAAd,EAAAc,kBACAE,kBACAkD,SAAA,GACAjD,mBACAC,aAAAlB,EAAAkB,aACAC,aAAAnB,EAAAmB,cAEA,GAAAnB,EAAAgB,gBAAAhB,EAAAgB,eAAAsB,OAAA,EAEA,QAAA6B,EAAA,EAAAA,EAAAnE,EAAAgB,eAAAsB,SAAA6B,EACAvD,EAAAI,eAAA6B,KAAA7C,EAAAgB,eAAAmD,GAAAtD,eAIAuD,IAAApE,EAAAiB,iBAAA,OAAAjB,EAAAiB,kBACAjB,EAAAiB,oBAEAL,EAAAK,gBAAAjB,EAAAiB,gBAEA,IAAAL,EAAAM,cACA0C,IACAhD,EAAAM,aAAA,EACAjB,KAAAuB,UAAAqB,KAAAjC,GACAmC,QAAAC,IAAA,WAAAY,KAIAhD,EAAAM,aAAA,EACA+C,EAAApB,KAAAjC,IAIA,OAAAqD,GAKAI,eAxJA,WAyJA,IAAAC,EAAArE,KAAA0D,aAKA,GADAZ,QAAAC,IAAA,QAAA/C,KAAAuB,WACAvB,KAAA6D,MAAAC,KAAAC,kBAAA1B,QAAA,EACAiC,MAAA,kBADA,CAIA,IAAAC,GACAlB,SAAA,EACAmB,aAAAH,EACAI,UAAAzE,KAAAuB,WAEMyB,KACN0B,OAAA,OACAC,IAAA,4EAEAC,YAAA,iCACA7E,KAAAwE,IACAjB,KAAA,SAAAC,GACA,IAAAA,EAAAsB,QACAP,MAAA,UAGAA,MAAA,OAAAf,EAAAxD,KAAA+E,WACAC,MAAA,SAAAC,GAEAV,MAAAU,EAAAzB,SAAAxD,KAAA+E,aAKAG,iBA1LA,WA2LA,IAAAC,EAAAlF,KAAA0D,aAAAyB,OAAAnF,KAAAuB,WACAuB,QAAAC,IAAA,UAAA/C,KAAA0D,cACAZ,QAAAC,IAAA,QAAA/C,KAAAuB,WACAuB,QAAAC,IAAA,QAAAmC,GACAlF,KAAA6D,MAAAC,KAAAC,kBAAA1B,QAAA,EACAiC,MAAA,gBAGMtB,KACN0B,OAAA,OACAC,IAAA,4EAEA5E,MACAsD,SAAA,EACA+B,WAAAF,KAEA5B,KAAA,SAAAC,GACA,IAAAA,EAAAsB,QACAP,MAAA,UAGAA,MAAA,OAAAf,EAAAxD,KAAA+E,WACAC,MAAA,SAAAC,GAEAV,MAAAU,EAAAzB,SAAAxD,KAAA+E,YAOAO,OA1NA,SA0NA1C,EAAA5C,GACAC,KAAAsF,cAGAvF,EAAAgB,gBACAf,KAAAuF,KAAAxF,EAAA,qBAEAC,KAAAwF,uBAEAzF,EAAAgB,eAAA6B,KAAA5C,KAAAyF,WACA3C,QAAAC,IAAAhD,EAAAgB,gBACAf,KAAAW,SAAAC,SAAAZ,KAAAW,SAAAE,kBAAA,GACAb,KAAAW,SAAAK,mBACAhB,KAAAE,sBAEAuF,QAzOA,WA0OA,OACA7E,SAAAhB,IACAiB,kBAAAb,KAAAW,SAAAE,kBAEAG,gBAAAhB,KAAAW,SAAAK,gBACAC,aAAA,EACAC,aAAA,IAGAwE,OAnPA,SAmPA/C,EAAA5C,GAIAC,KAAAuF,KAAAxF,EAAA,eACAC,KAAAuF,KAAA5C,EAAA,eAQA0B,KAhQA,SAgQA1B,EAAA5C,GACAC,KAAAW,SAAAE,kBAAAd,EAAAc,kBACAb,KAAAE,iBAAAH,EAAAiB,gBACAhB,KAAAwB,UAAA,GAGAmE,YAtQA,SAsQAhD,EAAA5C,GACAA,EAAAc,kBAAAb,KAAAW,SAAAE,kBACAd,EAAAiB,gBAAAhB,KAAAW,SAAAK,gBACAhB,KAAAwB,UAAA,GAIAoE,QA7QA,SA6QA7F,GACAC,KAAAuF,KAAAxF,EAAA,gBAGAgE,gBAjRA,aAiRA8B,UAAAxD,OAAA,QAAA8B,IAAA0B,UAAA,KAAAA,UAAA,GACA/C,QAAAC,IAAA,kBACAD,QAAAC,IAAA/C,KAAA6D,MAAAC,KAAAC,iBAAA,KAEA+B,eArRA,WAuRAhD,QAAAC,IAAA/C,KAAA6D,MAAAC,KAAAgC,mBAEAC,gBAzRA,WA0RA/F,KAAA6D,MAAAC,KAAAiC,kBACAnG,GAAA,IAGAA,GAAA,MAIAoG,WAlSA,WAmSAhG,KAAA6D,MAAAC,KAAAmC,gBAAA,yBAEAC,WArSA,WAsSAlG,KAAA6D,MAAAC,KAAAmC,gBAAA,oBAGAE,kBAzSA,WA0SArD,QAAAC,IAAA,OAGAqD,aA7SA,WA8SApG,KAAA6D,MAAAC,KAAAmC,oBAKAI,aAnTA,SAmTA9F,GACAP,KAAAW,SAAAK,gBAAAT,GAKAiF,qBAzTA,WAyTA,IAAAc,EAAAtG,KACAuG,EAAAvG,KAAAW,SAAAK,gBACAhB,KAAAW,SAAAK,mBACAuF,EAAAC,QAAA,SAAAC,GACAH,EAAA3F,SAAAK,gBAAA4B,KAAA6D,EAAAlE,UAGA+C,UAhUA,WAkUA,OAAAtF,KAAAW,SAAAE,oBACAb,KAAA0G,OAAA,YACA,IAKAC,cAzUA,SAyUAC,EAzUAC,GAyUA,IAAAC,EAAA9G,KAAA2C,EAAAkE,EAAAlE,KAAA5C,EAAA8G,EAAA9G,KAAA8G,EAAAE,MACA,OACAH,EAAA,QAAAI,MAAA,qBACAJ,EAAA,QAAAjE,EAAAtC,QAEAuG,EAAA,QACAA,EAAA,aAAAK,OAAAC,KAAA,OAAAC,KAAA,QAAAC,IAAAC,MAAA,kBAAAP,EAAAzB,OAAA1C,EAAA5C,OAAA,OACA6G,EAAA,aAAAK,OAAAC,KAAA,OAAAC,KAAA,QAAAC,IAAAC,MAAA,kBAAAP,EAAApB,OAAA/C,EAAA5C,OAAA,OACA6G,EAAA,aAAAK,OAAAC,KAAA,OAAAC,KAAA,QAAAC,IAAAC,MAAA,kBAAAP,EAAAzC,KAAA1B,EAAA5C,OAAA,OACA6G,EAAA,aAAAK,OAAAC,KAAA,OAAAC,KAAA,QAAAC,IAAAC,MAAA,kBAAAP,EAAAnB,YAAAhD,EAAA5C,OAAA,SACA6G,EAAA,aAAAK,OAAAC,KAAA,OAAAC,KAAA,QAAAC,IAAAC,MAAA,kBAAAP,EAAAlB,QAAA7F,OAAA,cCtdeuH,GADEC,OAFjB,WAA0B,IAAAC,EAAAxH,KAAayH,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,gBAAoCE,aAAaC,SAAA,WAAAC,IAAA,IAAAC,OAAA,IAAAC,KAAA,IAAAC,MAAA,QAAuEjB,OAAQkB,UAAA,cAAwBR,EAAA,aAAkBE,aAAaO,OAAA,OAAAC,WAAA,aAAwCV,EAAA,uBAAAH,EAAAc,GAAA,KAAAX,EAAA,gBAAAA,EAAA,YAA0EV,OAAOiB,MAAA,WAAiBP,EAAA,uBAAAH,EAAAc,GAAA,KAAAX,EAAA,WAAsDY,YAAA,YAAsBZ,EAAA,gBAAAA,EAAA,aAAqCE,aAAaW,aAAA,YAAuBhB,EAAAc,GAAA,UAAAd,EAAAc,GAAA,MAAAX,EAAA,OAA0CY,YAAA,0BAAoCZ,EAAA,OAAYY,YAAA,UAAoBZ,EAAA,WAAgBc,IAAA,OAAAxB,OAAkByB,uBAAAlB,EAAAlG,QAAAvB,KAAAyH,EAAAzH,KAAA4I,gBAAA,GAAAC,WAAA,WAAAC,UAAA,GAAAC,wBAAA,EAAAC,oBAAA,GAAAzI,MAAAkH,EAAArH,aAAA6I,iBAAAxB,EAAAb,eAA2NS,IAAK6B,OAAAzB,EAAArB,qBAAgCqB,EAAAc,GAAA,KAAAX,EAAA,OAAwBY,YAAA,QAAkBZ,EAAA,WAAgBuB,OAAO3I,MAAAiH,EAAA,SAAA2B,SAAA,SAAAC,GAA8C5B,EAAA7G,SAAAyI,GAAiBC,WAAA,cAAwB1B,EAAA,gBAAAA,EAAA,aAAqCY,YAAA,aAAAtB,OAAgCE,KAAA,QAAcC,IAAKC,MAAA,SAAAiC,GAAyBA,EAAAC,qBAA2B/B,EAAAc,GAAA,8BAAAd,EAAAc,GAAA,KAAAX,EAAA,gBAAsEE,aAAa2B,cAAA,KAAkBvC,OAAQ5G,MAAA,OAAAoJ,cAAAjC,EAAArG,kBAAiDwG,EAAA,eAAoBY,YAAA,MAAAtB,OAAyBC,KAAA,SAAAwC,QAAAlC,EAAAzH,KAAAO,MAAAkH,EAAAlH,OAAqD8G,IAAK6B,OAAAzB,EAAAnB,cAA0B6C,OAAQ3I,MAAAiH,EAAA,iBAAA2B,SAAA,SAAAC,GAAsD5B,EAAAtH,iBAAAkJ,GAAyBC,WAAA,uBAAgC,GAAA7B,EAAAc,GAAA,KAAAX,EAAA,gBAAqCE,aAAa2B,cAAA,KAAkBvC,OAAQ5G,MAAA,OAAAoJ,cAAAjC,EAAArG,kBAAiDwG,EAAA,YAAiBV,OAAO0C,YAAA,SAAsBT,OAAQ3I,MAAAiH,EAAA7G,SAAA,kBAAAwI,SAAA,SAAAC,GAAgE5B,EAAAjC,KAAAiC,EAAA7G,SAAA,oBAAAyI,IAAiDC,WAAA,iCAA0C,GAAA7B,EAAAc,GAAA,KAAAX,EAAA,qBAAAH,EAAAnG,cAAAsG,EAAA,aAAgFY,YAAA,aAAAtB,OAAgCE,KAAA,WAAiBC,IAAKC,MAAAG,EAAApD,kBAA4BoD,EAAAc,GAAA,QAAAd,EAAAoC,KAAApC,EAAAc,GAAA,UAAAd,EAAAnG,cAAAsG,EAAA,aAAkFY,YAAA,aAAAtB,OAAgCE,KAAA,WAAiBC,IAAKC,MAAAG,EAAAvC,oBAA8BuC,EAAAc,GAAA,QAAAd,EAAAoC,KAAApC,EAAAc,GAAA,YAAAd,EAAAnG,cAAAsG,EAAA,aAAiFY,YAAA,aAAAtB,OAAgCE,KAAA,UAAgBC,IAAKC,MAAA,SAAAiC,GAAyBA,EAAAC,qBAA2B/B,EAAAc,GAAA,aAAAd,EAAAoC,KAAApC,EAAAc,GAAA,KAAAX,EAAA,aAA2DP,IAAIC,MAAAG,EAAApB,gBAA0BoB,EAAAc,GAAA,uBAAAd,EAAAc,GAAA,KAAAX,EAAA,WAAAH,EAAAc,GAAA,KAAAX,EAAA,uCAEjhFkC,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACElK,EACAwH,GATF,EAVA,SAAA2C,GACEF,EAAQ,SAaV,KAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/3.373f2bb67dd8cd100224.js","sourcesContent":["<template>\n  <div>\n    <el-container style=\"position: absolute;top:0;bottom:0;left:0;width:100%;\" direction=\"vertical\">\n      <el-header style=\" height: 82px;   background: #f1f2f7;\">\n         <head-bar-router></head-bar-router>\n      </el-header>\n    <el-container>\n      <el-aside width=\"211px\">\n        <side-bar-router></side-bar-router>\n      </el-aside>\n      <el-main class=\"el-main\">\n        <el-container>\n          <el-header style=\"text-align: center\">指标选择</el-header><!--header需要的时候可以添加-->\n          <template>\n            <div class=\"custom-tree-container\">\n              <div class=\"block\">\n                <!--<p>使用 render-content</p>-->\n                <!--accordion 为手风琴模式-->\n                <!--:default-expanded-keys=\"[2]\"-->\n                <!--check-strictly  父子完全不相连-->\n                <el-tree\n                  :default-checked-keys=\"checked\"\n                  :data=\"data\"\n                  show-checkbox\n                  node-key=\"targetId\"\n                  accordion\n                  :expand-on-click-node=\"false\"\n                  ref=\"tree\"\n                  highlight-current\n                  :props=\"defaultProps\"\n                  @change=\"handleCheckChange\"\n                  :render-content=\"renderContent\">\n                </el-tree>\n                <div class=\"add\">\n                  <el-form v-model=\"newChild\">\n                    <el-form-item>\n                      <el-button type=\"text\" @click.prevent class=\"textButton\">先在下方输入，再在上方需要的地方点击添加</el-button>\n                    </el-form-item>\n                    <el-form-item label=\"指标关联\" :label-width=\"formLabelWidth\" style=\"margin-left: 0\">\n                      <el-cascader\n                        size=\"medium\"\n                        :options=\"data\"\n                        v-model=\"selectedOptions2\"\n                        :props=\"props\"\n                        @change=\"handleChange\"\n                        class=\"cas\">\n                      </el-cascader>\n                    </el-form-item>\n                    <el-form-item label=\"指标描述\" :label-width=\"formLabelWidth\" style=\"margin-left: 0\">\n                      <el-input v-model=\"newChild.targetDescription\" placeholder=\"请输入指标\"></el-input>\n                    </el-form-item>\n                    <!--<el-form-item label=\"指标选项\"  :label-width=\"formLabelWidth\">\n                      <el-input v-model=\"newChild.options\" placeholder=\"请用分号间隔\"></el-input>\n                    </el-form-item>-->\n                    <el-form-item>\n                      <el-button type=\"primary\" @click=\"editSchoolData\" class=\"textButton\" v-if=\"schoolExisted===true\">修改</el-button>\n                      <el-button type=\"primary\" @click=\"createSchoolData\" class=\"textButton\" v-if=\"schoolExisted===false\">新建</el-button>\n                      <el-button type=\"danger\" @click.prevent class=\"textButton\" v-if=\"schoolExisted===null\">请联系管理员！</el-button>\n                      <el-button @click=\"resetChecked\">清空所选项</el-button>\n                    </el-form-item>\n                  </el-form>\n                </div>\n                <el-main>\n                  <!--debug用-->\n                  <!--<el-button @click=\"getCheckedNodes(leafOnly=true)\">输出所有选中的结点</el-button>-->\n                  <!--<el-button @click=\"getCheckedKeys\">输出所有选中的Key</el-button>-->\n                  <!--<el-button @click=\"packageOne\">套餐一</el-button>&lt;!&ndash;通过 node 设置&ndash;&gt;\n                  <el-button @click=\"packageTwo\">套餐二</el-button>&lt;!&ndash;通过 key 设置&ndash;&gt;-->\n                  <!-- <el-button @click=\"showList\">输出List1&2</el-button>-->\n                </el-main>\n                <el-main>\n                </el-main>\n              </div>\n            </div>\n          </template>\n        </el-container>\n      </el-main>\n    </el-container>\n    </el-container>\n  </div>\n</template>\n<script>/* eslint-disable */\nimport sideBarRouter from '@/components/sideBar/index'\nimport headBarRouter from '@/components/head/index'\nimport ElSelectDropdown from 'element-ui/packages/select/src/select-dropdown'\nimport axios from 'axios/index'\nimport qs from 'qs'\nimport Mock from 'mockjs'\nlet id //这里的id改成表里最大id\nlet nodeData = []\nexport default {\n  data () {\n    this.getSchoolData()\n    return {\n      selectedOptions2: [],//默认选择\n      //设置别名\n      defaultProps: {\n        children: 'targetChildren',\n        label: 'targetDescription',\n      },\n      props: {\n        value: 'targetId',\n        label: 'targetDescription',\n        children: 'targetChildren',\n        multiple: true,\n        checkStrictly:true,\n      },\n      dialogFormVisible: false,\n      newChild: {\n        targetId:-1,\n        targetDescription:'',\n        targetShowType:'',\n        targetChildren:[],\n        targetRelevance:[],\n        targetStatus:-1,\n        targetOrigin:-1\n      },\n      formLabelWidth: '120px',\n      labelPosition:'left',\n      data: [],\n\n      //学校是否已经有一张表\n      schoolExisted: null,\n\n      //data 更新：可修改\n      checked:[],\n      selfCreat:[],\n      editFlag:true,\n      intervalId:0,\n      currentChecked:{},\n    }\n\n  },\n  components: {ElSelectDropdown, sideBarRouter, headBarRouter},\n  methods: {\n\n    /*迭代查找children对应的结点*/\n    /**\n     * @return {null}\n     */\n    Iteration(children){\n      for(let i=0;i<nodeData.length;++i){\n        if (nodeData[i].targetId === children) {\n          let node = nodeData.splice(i, 1).pop()\n          return node\n        }\n      }\n      return null\n    },\n\n    DFSNode (childrenId) {\n      const nodes = []//[{},{},{}]\n      for (let i = 0; i < childrenId.length; ++i) {\n        /*查找childrenID对应的结点*/\n        const node=this.Iteration(childrenId[i]);\n        /*如果该childrenID对应的结点不存在，则跳过该结点*/\n        if(node!=null){\n          if(node.targetStatus===1){\n            this.checked.push(node.targetId)\n            //console.log(this.checked)\n          }\n          if(node.targetChildren.length>0){\n            nodes.push({\n              targetId: node.targetId,\n              targetDescription: node.targetDescription,\n              targetRelevance:node.targetRelevance,\n              targetOrigin: node.targetOrigin,\n              targetStatus: node.targetStatus,\n              targetChildren: this.DFSNode(node.targetChildren)})\n          }\n\n          else\n            nodes.push({\n              targetId: node.targetId,\n              targetDescription: node.targetDescription,\n              targetRelevance:node.targetRelevance,\n              targetOrigin: node.targetOrigin,\n              targetStatus: node.targetStatus,})\n        }\n      }\n      return nodes;\n    },\n    /*\n        oldDFSNode (data_1, data, len) {\n          const nodes = []//[{},{},{}]\n          for (let i = 0; i < len; ++i) {\n            if (data.length >= data_1[i] && data[data_1[i] - 1].id == data_1[i]) {\n              const node = data[data_1[i] - 1]\n              if(node.childrenID.length>0)\n                nodes.push({id: node.id,label: node.describeDataForm,relevanceID:node.relevanceID,children: this.oldDFSNode(node.childrenID, data,  node.childrenID.length)})\n              else\n                nodes.push({id: node.id,label: node.describeDataForm})\n            }\n          }\n          return nodes;\n        },\n    */\n    /**\n     * 从数据库中获取数据\n     * */\n    getSchoolData() {\n      console.log()\n      const nodes=[];\n      const url = 'http://47.110.134.247/group2_b/schoolStandardDataForm/getData'\n      //const url= 'http://er58rm.natappfree.cc/schoolStandardDataForm/getData'\n      axios.post(url,qs.stringify({schoolId:1}))\n      /*axios({\n        method: 'post',\n        url: 'http://er58rm.natappfree.cc/schoolStandardDataForm/getData',\n        //url: 'http://datamock.com',\n        data: {\n          'schoolId' : 1,\n        },\n      })*/.then((response) => {\n        /*为全部变量赋值，值为后端返回的数据*/\n        nodeData=response.data.data.target\n        //console.log(response.data.data.exist)\n        this.schoolExisted = response.data.data.exist\n        //console.log(this.schoolExisted)\n        /*设置添加时，新结点的起始id*/\n        id=nodeData[nodeData.length-1].targetId+1\n        /*\n        * 将childrenID列表转换为childrenNode列表\n        * 每完全转换一个结点，就将该结点从全局nodeData中删除\n        * 直到nodeData中结点全部删除完，则表明数据全部转换完\n        * 新转换完成的树，存放于nodes中\n        * */\n        while (nodeData.length>0){\n          const childrenId = [nodeData[0].targetId]\n          /*console.log(childrenId)*/\n          nodes.push(this.DFSNode(childrenId).pop())\n          /*console.log(nodeData)*/\n        }\n        this.data=nodes\n      })\n    },\n\n    /**\n     * 将指标由childrenNode列表转换为childrenID列表，存入数据库中\n     * */\n    DFStoArray(){\n      var cnt = 0\n      const chosenList = this.$refs.tree.getCheckedNodes()\n      console.log(chosenList)\n      const dataArray=[]\n      for(let i=0;i<chosenList.length;++i){\n        const data=chosenList[i]\n        const newChild = {\n          targetId: data.targetId,\n          targetDescription: data.targetDescription,\n          targetChildren:[] ,\n          showType:\"\",\n          targetRelevance:[],\n          targetStatus:data.targetStatus,\n          targetOrigin:data.targetOrigin,\n        }\n        if (data.targetChildren && data.targetChildren.length>0) {\n          /*将childrenNode替换为childrenID*/\n          for(let j=0;j<data.targetChildren.length;++j){\n            newChild.targetChildren.push(data.targetChildren[j].targetId)\n          }\n        }\n        /*如果指标关联不存在，则置为[]*/\n        if(data.targetRelevance===undefined || data.targetRelevance===null){\n          data.targetRelevance=[]\n        }\n        newChild.targetRelevance=data.targetRelevance\n        //判断是否为新建指标\n        if(newChild.targetStatus===2){\n          cnt ++\n          newChild.targetStatus = 1 //标记为已勾选\n          this.selfCreat.push(newChild)\n          console.log(\"i am in \",cnt)\n        }\n        else {\n          //console.log(newChild.targetStatus)\n          newChild.targetStatus = 1 //标记为已勾选\n          dataArray.push(newChild)\n        }\n\n      }\n      return dataArray\n    },\n    /**\n     * 保存指标\n     * */\n    editSchoolData () {\n      let edit =this.DFStoArray();\n/*\n      console.log(\"原来保存的内容\",this.DFStoArray())\n*/\n      console.log(\"新建的内容\",this.selfCreat)\n      if(this.$refs.tree.getCheckedNodes().length<=0){\n        alert(\"请确保您的指标不为空\");\n        return ;\n      }\n      var d= {\n        'schoolId': 1,\n          'updateTarget':edit,\n          'addTarget':this.selfCreat\n      }\n      axios({\n        method: 'post',\n        url: 'http://47.103.77.143/group2_b/schoolStandardDataForm/updateSchoolDataForm',\n        //url: 'http://er58rm.natappfree.cc/schoolStandardDataForm//updateSchoolDataForm',\n        contentType: \"application/json;charset=UTF-8\",\n        data: d\n      }).then((response) => {\n        if(response.status===4){\n          alert('指标参数错误');\n        }\n        /*成功提醒*/\n        alert('指标创建'+response.data.message);\n      }).catch(function (result) {\n          /*异常提醒*/\n          alert(result.response.data.message)\n        }\n      )\n    },\n\n    createSchoolData () {\n      var combined = this.DFStoArray().concat(this.selfCreat)\n      console.log(\"原来保存的内容\",this.DFStoArray())\n      console.log(\"新建的内容\",this.selfCreat)\n      console.log(\"全部的内容\",combined)\n      if(this.$refs.tree.getCheckedNodes().length<=0){\n        alert(\"请确保您选择的指标不为空\");\n        return ;\n      }\n      axios({\n        method: 'post',\n        url: 'http://47.103.77.143/group2_b/schoolStandardDataForm/createSchoolDataForm',\n        //url: 'http://er58rm.natappfree.cc/schoolStandardDataForm/createSchoolDataForm',\n        data: {\n          \"schoolId\":1,\n          \"schoolData\":combined,\n        }\n      }).then((response) => {\n        if(response.status===4){\n          alert('指标参数错误');\n        }\n        /*成功提醒*/\n        alert('指标创建'+response.data.message);\n      }).catch(function (result) {\n          /*异常提醒*/\n          alert(result.response.data.message)\n        }\n      )\n    },\n\n\n\n    append (node,data) {\n      if(this.testEmpty()){\n        return\n      }\n      if (!data.targetChildren) {\n        this.$set(data, 'targetChildren', [])\n      }\n      this.converterRelevanceID()\n      //console.log(this.newChild.relevanceID)\n      data.targetChildren.push(this.getData())\n      console.log(data.targetChildren)\n      this.newChild.targetId=this.newChild.targetDescription= ''\n      this.newChild.targetRelevance = []\n      this.selectedOptions2 = []\n    },\n    getData(){\n      return  {\n        targetId: id++,\n        targetDescription: this.newChild.targetDescription,\n        //dataOptions: this.newChild.options.split('；'),\n        targetRelevance: this.newChild.targetRelevance,\n        targetStatus : 2,//0表示未选中    1为选中状态   2为新建指标且待定\n        targetOrigin : 1, //1表示用户创建  0为超级管理员创建的元表指标选项\n      }\n    },\n    remove (node, data) {\n      /*console.log(node.parent)\n      console.log(node.parent.data)\n      console.log(node.parent.data.children)*/\n      this.$set(data, 'disabled', true)\n      this.$set(node, 'checked', false)\n      //console.log(data)\n      /*const parent = node.parent\n      const children = parent.data.children || parent.data\n      const index = children.findIndex(d => d.id === data.id)\n      children.splice(index, 1)*/\n    },\n\n    edit (node, data) {\n      this.newChild.targetDescription = data.targetDescription\n      this.selectedOptions2 = data.targetRelevance\n      this.editFlag = false\n    },\n\n    editConfirm (node, data) {\n      data.targetDescription = this.newChild.targetDescription\n      data.targetRelevance = this.newChild.targetRelevance\n      this.editFlag = true\n    },\n\n\n    recover (data) {\n      this.$set(data, 'disabled', false)\n    },\n\n    getCheckedNodes(leafOnly=true) {\n      console.log(\"chosenList is:\");\n      console.log(this.$refs.tree.getCheckedNodes(leafOnly=true));\n    },\n    getCheckedKeys() {\n      //bug：如果其孩子节点都被选择，则父亲节点也会被认为选择\n      console.log(this.$refs.tree.getCheckedKeys());\n    },\n    setCheckedNodes() {\n      this.$refs.tree.setCheckedNodes([{\n        id: 5,\n        /*label: '二级 2-1'*/\n      }, {\n        id: 9,\n        /*label: '三级 1-1-1'*/\n      }]);\n    },\n    packageOne() {\n      this.$refs.tree.setCheckedKeys([4,7,22,25,26,13,14,16]);\n    },\n    packageTwo() {\n      this.$refs.tree.setCheckedKeys([8,18,19,14,15,16]);\n    },\n\n    handleCheckChange(){\n      console.log(\"Hi\")\n    },\n\n    resetChecked() {\n      this.$refs.tree.setCheckedKeys([]);\n    },\n    /**\n     * 关联指标\n     * */\n    handleChange(value) {\n      this.newChild.targetRelevance=value\n    },\n    /**\n     * 由于关联指标时，value为二维数组，需要取得其中有价值的relevanceID\n     * */\n    converterRelevanceID(){\n      let relevanceID=this.newChild.targetRelevance\n      this.newChild.targetRelevance=[]\n      relevanceID.forEach(relevance=>{\n        this.newChild.targetRelevance.push(relevance.pop())\n      })\n    },\n    testEmpty() {\n      //判断输入是否为空\n      if (!this.newChild.targetDescription) {\n        this.$alert(\"指标不可为空！\")\n        return true\n      }\n      return false\n    },\n\n    renderContent(h, { node, data, store }) {\n      return (\n        <span class=\"custom-tree-node\">\n        <span >{node.label}</span>\n\n        <span>\n        <el-button size=\"mini\" type=\"text\" on-click={ () => this.append(node,data) }>添加</el-button>\n      <el-button size=\"mini\" type=\"text\" on-click={ () => this.remove(node, data) }>删除</el-button>\n      <el-button size=\"mini\" type=\"text\" on-click={ () => this.edit(node, data) } >修改</el-button>\n      <el-button size=\"mini\" type=\"text\" on-click={ () => this.editConfirm(node, data) } >确认修改</el-button>\n      <el-button size=\"mini\" type=\"text\" on-click={ () => this.recover(data) }>恢复</el-button>\n      </span>\n      </span>);\n    }\n  },\n\n\n}\n</script>\n<style>\n  /*去掉整个页面的边框*/\n  *{\n    padding: 0;\n    margin: 0;\n  }\n  .custom-tree-node {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 14px; /*字号*/\n    padding-left:  0; /*左侧宽度*/\n    padding-right: 30px; /*右侧宽度*/\n\n  }\n  .el-header, .el-footer {\n    background-color: #B3C0D1;\n    color: #333;\n    margin: 0;\n    text-align: center;\n    line-height: 60px;\n  }\n  .el-main {\n    background-color: #E9EEF3;\n    color: #333;\n    padding: 0;\n  }\n  .body {\n    padding: 0;\n    margin: 0;\n  }\n  .cas{\n    margin-left: 0;\n  }\n  .textButton{\n    margin-left: 50px;\n  }\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/basic_data/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-container',{staticStyle:{\"position\":\"absolute\",\"top\":\"0\",\"bottom\":\"0\",\"left\":\"0\",\"width\":\"100%\"},attrs:{\"direction\":\"vertical\"}},[_c('el-header',{staticStyle:{\"height\":\"82px\",\"background\":\"#f1f2f7\"}},[_c('head-bar-router')],1),_vm._v(\" \"),_c('el-container',[_c('el-aside',{attrs:{\"width\":\"211px\"}},[_c('side-bar-router')],1),_vm._v(\" \"),_c('el-main',{staticClass:\"el-main\"},[_c('el-container',[_c('el-header',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"指标选择\")]),_vm._v(\" \"),[_c('div',{staticClass:\"custom-tree-container\"},[_c('div',{staticClass:\"block\"},[_c('el-tree',{ref:\"tree\",attrs:{\"default-checked-keys\":_vm.checked,\"data\":_vm.data,\"show-checkbox\":\"\",\"node-key\":\"targetId\",\"accordion\":\"\",\"expand-on-click-node\":false,\"highlight-current\":\"\",\"props\":_vm.defaultProps,\"render-content\":_vm.renderContent},on:{\"change\":_vm.handleCheckChange}}),_vm._v(\" \"),_c('div',{staticClass:\"add\"},[_c('el-form',{model:{value:(_vm.newChild),callback:function ($$v) {_vm.newChild=$$v},expression:\"newChild\"}},[_c('el-form-item',[_c('el-button',{staticClass:\"textButton\",attrs:{\"type\":\"text\"},on:{\"click\":function($event){$event.preventDefault();}}},[_vm._v(\"先在下方输入，再在上方需要的地方点击添加\")])],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"0\"},attrs:{\"label\":\"指标关联\",\"label-width\":_vm.formLabelWidth}},[_c('el-cascader',{staticClass:\"cas\",attrs:{\"size\":\"medium\",\"options\":_vm.data,\"props\":_vm.props},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedOptions2),callback:function ($$v) {_vm.selectedOptions2=$$v},expression:\"selectedOptions2\"}})],1),_vm._v(\" \"),_c('el-form-item',{staticStyle:{\"margin-left\":\"0\"},attrs:{\"label\":\"指标描述\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"placeholder\":\"请输入指标\"},model:{value:(_vm.newChild.targetDescription),callback:function ($$v) {_vm.$set(_vm.newChild, \"targetDescription\", $$v)},expression:\"newChild.targetDescription\"}})],1),_vm._v(\" \"),_c('el-form-item',[(_vm.schoolExisted===true)?_c('el-button',{staticClass:\"textButton\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editSchoolData}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.schoolExisted===false)?_c('el-button',{staticClass:\"textButton\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.createSchoolData}},[_vm._v(\"新建\")]):_vm._e(),_vm._v(\" \"),(_vm.schoolExisted===null)?_c('el-button',{staticClass:\"textButton\",attrs:{\"type\":\"danger\"},on:{\"click\":function($event){$event.preventDefault();}}},[_vm._v(\"请联系管理员！\")]):_vm._e(),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.resetChecked}},[_vm._v(\"清空所选项\")])],1)],1)],1),_vm._v(\" \"),_c('el-main'),_vm._v(\" \"),_c('el-main')],1)])]],2)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6f3e2b44\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/basic_data/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6f3e2b44\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6f3e2b44\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/basic_data/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}